syntax = "proto3";
package rpcpb;

import "google/api/annotations.proto";
// import "google/protobuf/empty.proto";

message NonParamsRequest {
}

message GetStateResponse {
    string status = 1;
}

// assets
message ListAssetsRequest {
    string address = 1;
}

message ListAssetsResponse {
    repeated Asset assets = 1;
}

message Asset {
    string assetID = 1;
    uint64 amount = 2;
}

// transactions
message Input {
    string type = 1;
    string assetID = 2;
    uint64 amount =3;
    string address = 4;
    string spentOutputID = 5;
}

message Output {
    string type = 1;
    string assetID =2;
    uint64 amount = 3;
    string address = 4;
    string OutputID = 5;
    int32 position = 6;
}

message TX {
    string ID = 1;
    uint64 timestamp = 2;
    string blockID = 3;
    uint64 blockHeight = 4;
    uint32 position = 5;
    uint32 blockTransactionsCount = 6;
    uint64 confirmation = 7;
    bool statusFail = 8;
    repeated Input inputs = 9;
    repeated Output outputs = 10;
}

message ListTransactionsRequest {
    string address = 1;
    string assetID = 2;
}

message ListTransactionsResponse {
    repeated TX transactions = 1;
}

// submit tx
message SubmitTransactionRequest {
    string rawTransaction = 1;
}

message SubmitTransactionResponse {
    string txID = 1;
}

// gas
message EstimateTransactionGasRequest {
    string transactionTemplate = 1;
}

message EstimateTransactionGasResponse {
    int64 totalNeu = 1;
    int64 storageNeu = 2;
    int64 vmNeu = 3; 
}

service ApiService {
    // state
    rpc GetState (NonParamsRequest) returns (GetStateResponse) {
        option (google.api.http) = {
            get: "/v1/state"
        };
    }

    rpc ListAssets(ListAssetsRequest) returns (ListAssetsResponse) {
        option (google.api.http) = {
            post: "/v1/list-assets"
            body: "*"
        };
    }

    rpc ListTransactions(ListTransactionsRequest) returns (ListTransactionsResponse) {
        option (google.api.http) = {
            post: "/v1/list-transactions"
            body: "*"
        };
    }

    rpc SubmitTransaction(SubmitTransactionRequest) returns (SubmitTransactionResponse) {
        option (google.api.http) = {
            post: "/v1/submit-transaction"
            body: "*"
        };
    }

    rpc EstimateTransactionGas(EstimateTransactionGasRequest) returns (EstimateTransactionGasResponse) {
        option (google.api.http) = {
            post: "/v1/estimate-transaction-gas"
            body: "*"
        };
    }
}
