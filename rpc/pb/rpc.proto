syntax = "proto3";
package rpcpb;

import "google/api/annotations.proto";
// import "google/protobuf/empty.proto";

message NonParamsRequest {
}

message GetStateResponse {
    string status = 1;
}

// message CreateKeyRequest {
//     string alias = 1;
//     string password = 2;
// }

// message CreateKeyResponse {
//     string xpub = 1;
// }

// message ListKeyResponse {
//     repeated string xpub = 1;
// }

// message DeleteKeyRequest {
//     string password = 1;
//     string xpub = 2;
// }

// message ResetKeyPasswordRequest {
//     string xpub = 1;
//     string oldPassword = 2;
//     string newPassword = 3;
// }

// message ResetKeyPasswordResponse {
//     bool changed = 1;
// }

message SubmitTransactionRequest {
    string rawTransaction = 1;
}

message SubmitTransactionResponse {
    string txID = 1;
}

message ListAssetsRequest {
    string address = 1;
}

message ListAssetsResponse {
    string assets = 1;
}

message ListBalancesRequest {
    string accountID = 1;
}

message ListBalancesResponse {
    repeated string balances = 1;
}

message ListTransactionsRequest {
    string address = 1;
    string assetID = 2;
}

message ListTransactionsResponse {
    repeated string transactions = 1;
}

message ListTransactionRequest {
    string txID = 1;
}

message ListTransactionResponse {
    string tx = 1;
}

message EstimateTransactionGasRequest {
    string txTemplate = 1;
}

message EstimateTransactionGasResponse {
    int64 totalNeu = 1;
    int64 storageNeu = 2;
    int64 vmNeu = 3; 
}

service ApiService {
    // // state
    rpc GetState (NonParamsRequest) returns (GetStateResponse) {
        option (google.api.http) = {
            get: "/v1/state"
        };
    }

    // // Key
    // rpc CreateKey(CreateKeyRequest) returns (CreateKeyResponse) {
    //     option (google.api.http) = {
    //         post: "/v1/create-key"
    //         body: "*"
    //     };
    // }

    // rpc ListKey(NonParamsRequest) returns (ListKeyResponse) {
    //     option (google.api.http) = {
    //         post: "/v1/list-keys"
    //         body: "*"
    //     };
    // }

    // rpc DeleteKey(DeleteKeyRequest) returns (google.protobuf.Empty) {
    //     option (google.api.http) = {
    //         post: "/v1/delete-keys"
    //         body: "*"
    //     };
    // }

    // rpc ResetKeyPassword(ResetKeyPasswordRequest) returns (ResetKeyPasswordResponse) {
    //     option (google.api.http) = {
    //         post: "/v1/reset-key-password"
    //         body: "*"
    //     };
    // }

    rpc SubmitTransaction(SubmitTransactionRequest) returns (SubmitTransactionResponse) {
        option (google.api.http) = {
            post: "/v1/submit-transaction"
            body: "*"
        };
    }

    rpc ListAssets(ListAssetsRequest) returns (ListAssetsResponse) {
        option (google.api.http) = {
            post: "/v1/list-assets"
            body: "*"
        };
    }

    rpc ListBalances(ListBalancesRequest) returns (ListBalancesResponse) {
        option (google.api.http) = {
            post: "/v1/list-balances"
            body: "*"
        };
    }

    rpc ListTransactions(ListTransactionsRequest) returns (ListTransactionsResponse) {
        option (google.api.http) = {
            post: "/v1/list-transactions"
            body: "*"
        };
    }

    rpc EstimateTransactionGas(EstimateTransactionGasRequest) returns (EstimateTransactionGasResponse) {
        option (google.api.http) = {
            post: "/v1/estimate-transaction-gas"
            body: "*"
        };
    }

    rpc ListTransaction(ListTransactionRequest) returns (ListTransactionResponse) {
        option (google.api.http) = {
            post: "/v1/list-transactions"
            body: "*"
        };
    }
}
